model:
  class_path: MyLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslearn.models.simple_time_series.SimpleTimeSeries
            init_args:
              encoder:
                class_path: rslearn.models.swin.Swin
                init_args:
                  pretrained: true
                  output_layers: [7]
              image_channels: 3
              groups: [[0, 1, 2], [3, 4, 5]]
        decoders:
          class:
            - class_path: rslearn.models.pooling_decoder.PoolingDecoder
              init_args:
                in_channels: 2048
                out_channels: 10
                num_conv_layers: 1
                num_fc_layers: 2
            - class_path: rslearn.train.tasks.classification.ClassificationHead
    lr: 0.0001
    plateau_factor: 0.1
    plateau_patience: 10
    plateau_min_lr: 0
    plateau_cooldown: 0
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    file_api:
      class_path: rslearn.utils.file_api.S3FileAPI
      init_args:
        endpoint_url: "https://storage.googleapis.com"
        bucket_name: "satlas-explorer-data"
        prefix: "rslearn_labels/amazon_conservation/dataset_v1/live/"
    inputs:
      pre_0:
        data_type: "raster"
        layers: ["best_pre_0"]
        bands: ["R", "G", "B"]
        passthrough: true
      pre_1:
        data_type: "raster"
        layers: ["best_pre_1"]
        bands: ["R", "G", "B"]
        passthrough: true
      pre_2:
        data_type: "raster"
        layers: ["best_pre_2"]
        bands: ["R", "G", "B"]
        passthrough: true
      post_0:
        data_type: "raster"
        layers: ["best_post_0"]
        bands: ["R", "G", "B"]
        passthrough: true
      post_1:
        data_type: "raster"
        layers: ["best_post_1"]
        bands: ["R", "G", "B"]
        passthrough: true
      post_2:
        data_type: "raster"
        layers: ["best_post_2"]
        bands: ["R", "G", "B"]
        passthrough: true
      label:
        data_type: "vector"
        layers: ["label"]
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          class:
            class_path: MyClassificationTask
            init_args:
              property_name: "new_label"
              classes: ["agriculture", "mining", "airstrip", "road", "logging", "burned", "landslide", "hurricane", "river", "none"]
              allow_invalid: true
        input_mapping:
          class:
            label: "targets"
    batch_size: 32
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              pre_0: []
              pre_1: []
              pre_2: []
              post_0: []
              post_1: []
              post_2: []
            output_key: image
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 255
        - class_path: rslearn.train.transforms.pad.Pad
          init_args:
            mode: "center"
            size: 64
      groups: ["peru_interesting", "peru3", "peru3_flagged_in_peru", "nadia2", "nadia3", "brazil_interesting"]
    train_config:
      tags:
        oldsplit: train
    val_config:
      tags:
        oldsplit: val
    test_config:
      tags:
        oldsplit: val
trainer:
  logger:
    class_path: lightning.pytorch.loggers.WandbLogger
    init_args:
      project: rslearn-amazon-loss-classification
      log_model: "all"
      name: default
  max_epochs: 50
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
#  limit_train_batches: 64
