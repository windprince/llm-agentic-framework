model:
  class_path: rslp.maldives_ecosystem_mapping.train.CMLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslearn.models.simple_time_series.SimpleTimeSeries
            init_args:
              encoder:
                class_path: rslearn.models.swin.Swin
                init_args:
                  pretrained: true
                  output_layers: [1, 3, 5, 7]
                  input_channels: 17
              image_channels: 17
              groups: [[0, 1, 2, 3, 4, 5]]
        decoders:
          segment:
            - class_path: rslearn.models.unet.UNetDecoder
              init_args:
                in_channels: [[4, 128], [8, 256], [16, 512], [32, 1024]]
                out_channels: 17
                conv_layers_per_resolution: 2
            - class_path: rslearn.train.tasks.segmentation.SegmentationHead
    lr: 0.0001
    plateau: true
    plateau_factor: 0.2
    plateau_patience: 2
    plateau_min_lr: 0
    plateau_cooldown: 10
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: gcs://rslearn-eai/datasets/maldives_ecosystem_mapping/dataset_v1/20241017/
    inputs:
      planetscope:
        data_type: "raster"
        layers: ["planetscope"]
        bands: ["b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08"]
        passthrough: true
      planetscope.1:
        data_type: "raster"
        layers: ["planetscope.1"]
        bands: ["b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08"]
        passthrough: true
      planetscope.2:
        data_type: "raster"
        layers: ["planetscope.2"]
        bands: ["b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08"]
        passthrough: true
      planetscope.3:
        data_type: "raster"
        layers: ["planetscope.3"]
        bands: ["b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08"]
        passthrough: true
      planetscope.4:
        data_type: "raster"
        layers: ["planetscope.4"]
        bands: ["b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08"]
        passthrough: true
      planetscope.5:
        data_type: "raster"
        layers: ["planetscope.5"]
        bands: ["b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08"]
        passthrough: true
      sentinel2_0:
        data_type: "raster"
        layers: ["sentinel2_with_planet"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
      sentinel2_1:
        data_type: "raster"
        layers: ["sentinel2_with_planet.1"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
      sentinel2_2:
        data_type: "raster"
        layers: ["sentinel2_with_planet.2"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
      sentinel2_3:
        data_type: "raster"
        layers: ["sentinel2_with_planet.3"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
      sentinel2_4:
        data_type: "raster"
        layers: ["sentinel2_with_planet.4"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
      sentinel2_5:
        data_type: "raster"
        layers: ["sentinel2_with_planet.5"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
      targets:
        data_type: "raster"
        layers: ["label"]
        bands: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          segment:
            class_path: rslearn.train.tasks.segmentation.SegmentationTask
            init_args:
              num_classes: 17
              remap_values: [[0, 1], [0, 255]]
              zero_is_invalid: true
              metric_kwargs:
                average: "micro"
        input_mapping:
          segment:
            targets: "targets"
    batch_size: 8
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              planetscope: []
              sentinel2_0: []
              planetscope.1: []
              sentinel2_1: []
              planetscope.2: []
              sentinel2_2: []
              planetscope.3: []
              sentinel2_3: []
              planetscope.4: []
              sentinel2_4: []
              planetscope.5: []
              sentinel2_5: []
            output_selector: image
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 255
    train_config:
      patch_size: 128
      transforms:
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              planetscope: []
              sentinel2_0: []
              planetscope.1: []
              sentinel2_1: []
              planetscope.2: []
              sentinel2_2: []
              planetscope.3: []
              sentinel2_3: []
              planetscope.4: []
              sentinel2_4: []
              planetscope.5: []
              sentinel2_5: []
            output_selector: image
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 255
        - class_path: rslearn.train.transforms.flip.Flip
          init_args:
            image_selectors: ["image", "target/segment/classes", "target/segment/valid"]
      groups: ["crops_planetscope"]
      tags:
        split: train
    val_config:
      patch_size: 128
      groups: ["crops_planetscope"]
      tags:
        split: val
    test_config:
      patch_size: 128
      groups: ["crops_planetscope"]
      tags:
        split: val
    predict_config:
      groups: ["images_planetscope"]
      load_all_patches: true
      skip_targets: true
      patch_size: 512
trainer:
  max_epochs: 500
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: rslearn.train.prediction_writer.RslearnWriter
      init_args:
        path: gcs://rslearn-eai/datasets/maldives_ecosystem_mapping/dataset_v1/20241017/
        output_layer: output
        selector: ["segment"]
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        every_n_epochs: 50
        save_last: true
        monitor: val_segment/accuracy
        mode: max
rslp_project: maldives_ecosystem_mapping
rslp_experiment: planetscope_plus_sentinel2_data_20241017_satlaspretrain_flip_crop128_00
